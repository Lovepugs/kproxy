
keycloakMigrator = {
  // Keycloak installation json of the admin app of the realm
  keycloakJson = "..."

  // client secret given by keycloak admin client app
  clientsecret="secret"


  // Defines all the targets that are relevant for the realm defined in the keycloak deployment
  // for each target you can map a keycloak clientid
  // - to one or many check url(s)
  // - one or many forward urls
  targets = [
    {
      //clientIds (as defined in keycloak) for which the filter applies
      // MUST be non empty
      clientids = []

      // url of the webservice that validates user's credentials and returns :
      // the user informations required for user creation in keycloak
      // MUST be non empty
      // if many are provide they are all evaluated in parallel and the first that returns ok is used
      // So you can "merge" 2 sites in one and migrate from the one the really knows the user
      wsurls = ["http://mywebservice.com/checker"]

      // url(s) to call if user is successfully created
      // the body of the url will be the json provided by the checked urls
      // to which the userid in keycloak is added
      // this act as webhooks to call on successful migration
      forwardurls = []

      // defines if user are already migrated to keycloak. If so, the service only
      // check the password on the old system and set it on the new one
      // without creating or importing user to keycloak
      updatepasswordonly = false
    }
  ]

}


keycloakModule = {

  keycloakJson = ""

  routes = """ALL 	/		 		Allow"""

}
